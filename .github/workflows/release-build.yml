name: Release Build (Build image + PR to bump docker_image)

on:
  workflow_dispatch:
    inputs:
      push_latest:
        description: "Also push :latest tag"
        required: false
        default: "false"
        type: choice
        options: ["false", "true"]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      packages: write
    env:
      IMAGE_NAME: grid
      REGISTRY: ghcr.io/${{ github.repository_owner }}
      IMAGE_TAG: v${{ github.run_number }}-${{ github.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_TOKEN || secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME || github.actor }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build -t "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}" .
          if [ "${{ inputs.push_latest }}" = "true" ]; then
            docker tag "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}" "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          fi

      - name: Push Docker image
        run: |
          docker push "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
          if [ "${{ inputs.push_latest }}" = "true" ]; then
            docker push "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          fi

      - name: Install sops and age
        run: |
          sudo apt-get update
          sudo apt-get install -y age
          SOPS_VERSION=v3.8.1
          curl -Ls https://github.com/getsops/sops/releases/download/$SOPS_VERSION/sops-$SOPS_VERSION.linux.amd64 -o sops
          sudo install -m 0755 sops /usr/local/bin/sops

      - name: Prepare age key
        env:
          AGE_PRIVATE_KEY: ${{ secrets.AGE_PRIVATE_KEY }}
        run: |
          set -euo pipefail
          if [ -z "${AGE_PRIVATE_KEY:-}" ]; then
            echo "AGE_PRIVATE_KEY is not set. Please add it as a repository secret." >&2
            exit 1
          fi
          mkdir -p ~/.config/sops/age
          printf "%s\n" "$AGE_PRIVATE_KEY" > ~/.config/sops/age/keys.txt

      - name: Bump docker_image in prod.enc.tfvars
        run: |
          set -euo pipefail
          tmpfile=$(mktemp)
          # Decrypt to temp file
          sops -d secrets/prod.enc.tfvars > "$tmpfile"
          # Compute full image ref
          full_image="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
          echo "Using image: $full_image"
          # Update or append docker_image line (HCL tfvars format)
          if grep -qE '^\s*docker_image\s*=' "$tmpfile"; then
            sed -E -i "s|^\s*docker_image\s*=.*$|docker_image = \"$full_image\"|" "$tmpfile"
          else
            printf "\n# Updated by Release Build workflow on $(date -u +%F)\n" >> "$tmpfile"
            printf "docker_image = \"%s\"\n" "$full_image" >> "$tmpfile"
          fi
          # Move updated temp back, then encrypt in-place so .sops.yaml creation_rules match the path
          mv "$tmpfile" secrets/prod.enc.tfvars
          sops --encrypt --in-place secrets/prod.enc.tfvars
          # Ensure no plaintext remains
          shred -u "$tmpfile" || rm -f "$tmpfile"

      - name: Create PR to bump docker_image
        uses: peter-evans/create-pull-request@v6
        with:
          title: "release: bump docker_image to ${{ env.IMAGE_TAG }}"
          body: |
            This PR bumps the production image to:

            - `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}`

            Next steps:
            - Merge this PR
            - Run "Plan + Apply Prod (CDKTF)" with confirm=APPLY and approve the environment
            - Container will run Prisma migrations on startup
          branch: release/bump-image-${{ env.IMAGE_TAG }}
          commit-message: "chore(release): bump docker_image to ${{ env.IMAGE_TAG }}"
          labels: release,infra
          add-paths: |
            secrets/prod.enc.tfvars

      - name: Summarize image tag
        run: |
          echo "## Release Image" >> $GITHUB_STEP_SUMMARY
          echo "\`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}\`" >> $GITHUB_STEP_SUMMARY
