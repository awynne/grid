name: Terraform Cloud Force Unlock

on:
  workflow_dispatch:
    inputs:
      workspace:
        description: "Workspace name to unlock"
        required: true
        default: "gridpulse-prod"
        type: string
      confirm:
        description: "Type UNLOCK to confirm you want to force unlock the workspace"
        required: true
        type: string

jobs:
  force-unlock:
    runs-on: ubuntu-latest
    steps:
      - name: Guard confirmation
        run: |
          if [ "${{ github.event.inputs.confirm }}" != "UNLOCK" ]; then
            echo "Confirmation mismatch. Type UNLOCK exactly to proceed." >&2
            exit 1
          fi

      - name: Force unlock Terraform Cloud workspace
        env:
          TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
          TF_CLOUD_ORG: ${{ secrets.TF_CLOUD_ORG }}
          WORKSPACE_NAME: ${{ github.event.inputs.workspace }}
        run: |
          set -euo pipefail
          
          echo "🔓 Force unlocking Terraform Cloud workspace: $WORKSPACE_NAME"
          
          # Get workspace ID
          echo "📋 Getting workspace ID..."
          WORKSPACE_RESPONSE=$(curl -s \
            --header "Authorization: Bearer $TF_API_TOKEN" \
            --header "Content-Type: application/vnd.api+json" \
            "https://app.terraform.io/api/v2/organizations/$TF_CLOUD_ORG/workspaces/$WORKSPACE_NAME")
          
          WORKSPACE_ID=$(echo "$WORKSPACE_RESPONSE" | jq -r '.data.id')
          
          if [ "$WORKSPACE_ID" = "null" ] || [ -z "$WORKSPACE_ID" ]; then
            echo "❌ Failed to get workspace ID. Response:"
            echo "$WORKSPACE_RESPONSE"
            exit 1
          fi
          
          echo "✅ Found workspace ID: $WORKSPACE_ID"
          
          # Check current lock status
          echo "🔍 Checking lock status..."
          LOCK_RESPONSE=$(curl -s \
            --header "Authorization: Bearer $TF_API_TOKEN" \
            --header "Content-Type: application/vnd.api+json" \
            "https://app.terraform.io/api/v2/workspaces/$WORKSPACE_ID")
          
          LOCKED=$(echo "$LOCK_RESPONSE" | jq -r '.data.attributes.locked')
          
          if [ "$LOCKED" = "false" ]; then
            echo "ℹ️ Workspace is not currently locked"
            exit 0
          fi
          
          echo "⚠️ Workspace is locked, proceeding with force unlock..."
          
          # Force unlock the workspace
          echo "🔓 Forcing unlock..."
          UNLOCK_RESPONSE=$(curl -s -w "%{http_code}" \
            --request POST \
            --header "Authorization: Bearer $TF_API_TOKEN" \
            --header "Content-Type: application/vnd.api+json" \
            "https://app.terraform.io/api/v2/workspaces/$WORKSPACE_ID/actions/force-unlock")
          
          HTTP_CODE="${UNLOCK_RESPONSE: -3}"
          RESPONSE_BODY="${UNLOCK_RESPONSE%???}"
          
          if [ "$HTTP_CODE" = "200" ]; then
            echo "✅ Workspace successfully unlocked!"
          else
            echo "❌ Failed to unlock workspace. HTTP: $HTTP_CODE"
            echo "Response: $RESPONSE_BODY"
            exit 1
          fi
          
          # Verify unlock was successful
          echo "🔍 Verifying unlock..."
          sleep 2
          VERIFY_RESPONSE=$(curl -s \
            --header "Authorization: Bearer $TF_API_TOKEN" \
            --header "Content-Type: application/vnd.api+json" \
            "https://app.terraform.io/api/v2/workspaces/$WORKSPACE_ID")
          
          STILL_LOCKED=$(echo "$VERIFY_RESPONSE" | jq -r '.data.attributes.locked')
          
          if [ "$STILL_LOCKED" = "false" ]; then
            echo "✅ Verified: Workspace is now unlocked and ready for operations"
          else
            echo "⚠️ Warning: Workspace may still be locked, please check manually"
          fi

      - name: Summary
        run: |
          echo "## 🔓 Terraform Cloud Unlock Complete" >> $GITHUB_STEP_SUMMARY
          echo "- **Workspace**: ${{ github.event.inputs.workspace }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Organization**: ${{ secrets.TF_CLOUD_ORG }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The workspace should now be available for Terraform operations." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Next Steps:**" >> $GITHUB_STEP_SUMMARY
          echo "- Run your intended Terraform workflow (Plan + Apply or Recreate)" >> $GITHUB_STEP_SUMMARY
          echo "- Monitor for any remaining lock issues" >> $GITHUB_STEP_SUMMARY